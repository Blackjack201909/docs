import{_ as i,c as l,o as a,a4 as e}from"./chunks/framework.BAAGAbwm.js";const p=JSON.parse('{"title":"如何接入音乐喷泉互动点播系统？","description":"","frontmatter":{},"headers":[],"relativePath":"service/如何接入.md","filePath":"service/如何接入.md"}'),t={name:"service/如何接入.md"},o=e('<h1 id="如何接入音乐喷泉互动点播系统" tabindex="-1">如何接入音乐喷泉互动点播系统？ <a class="header-anchor" href="#如何接入音乐喷泉互动点播系统" aria-label="Permalink to &quot;如何接入音乐喷泉互动点播系统？&quot;">​</a></h1><h2 id="录入基本信息数据" tabindex="-1">录入基本信息数据 <a class="header-anchor" href="#录入基本信息数据" aria-label="Permalink to &quot;录入基本信息数据&quot;">​</a></h2><ol><li>建立数据库。将喷泉的相关信息录入并上传到系统的云端数据库。</li><li>信息数据至少包括：喷泉、场次、媒体、节目、特效参数、水型编组、设备配接、电源开关。</li><li>喷泉信息至少包括：名称、封面图片、国家、省份、城市、地址、地理位置坐标、节目类型数组。</li><li>场次信息至少包括：喷泉识别码、开始时间、结束时间、每周重复、每月重复、折扣百分比、取消数组。</li><li>媒体信息至少包括：名称、封面图片、出品人、分类、时长、国家。</li><li>节目信息至少包括：喷泉识别码、媒体识别码、名称、报幕时长、价格、分类标签、状态。</li><li>特效参数至少包括：样式数组、选择数组、幅度、宽度、相位、速度、方向数组、翼数组、组数组。</li><li>其他类型数据的描述过于专业化，可能引起读者的严重不适感，在此不赘述。</li></ol><h2 id="播放服务器对接喷泉硬件系统的现场控制总线" tabindex="-1">播放服务器对接喷泉硬件系统的现场控制总线 <a class="header-anchor" href="#播放服务器对接喷泉硬件系统的现场控制总线" aria-label="Permalink to &quot;播放服务器对接喷泉硬件系统的现场控制总线&quot;">​</a></h2><ol><li>喷泉硬件系统普遍采用多种现场总线来控制各类设备。一般总线协议有：Art-Net、DMX512、TCP、CAN、Modbus、I<sup>2</sup>C、RS232。从硬件上看相对简单：网口、串口。</li><li>只要硬件接口先对接上，然后软件编程接口配置参数连通总线协议。互动点播系统就可以完全接管喷泉硬件，实现有效控制。</li><li>从技术难度上来讲：硬件接口对接比较简单，几乎毫无难度。打通总线协议稍微复杂一些，但只要原始资料足够，也就是工作量的问题，多花些时间而已。</li><li>由于对接后不再使用原来主控电脑。所以，原主控电脑对节目的诸多限制也就随之消除。</li><li>对接后，原来的主控电脑仍然可以控制喷泉系统，只是不能与新系统同时工作而已。</li><li>由于新系统要与云端交流数据，因此，必须连接互联网。这也许是与原系统显著的不同之处。传统的喷泉系统都是本地系统，除非远程控制或传送文件，一般情况下不连接互联网。</li><li>测试系统的各个水型编组，录入各组设备的延时数据。</li></ol><h2 id="喷泉节目脚本编写并提交" tabindex="-1">喷泉节目脚本编写并提交 <a class="header-anchor" href="#喷泉节目脚本编写并提交" aria-label="Permalink to &quot;喷泉节目脚本编写并提交&quot;">​</a></h2><ol><li>脚本的编写一般放在接入工作的最后。这是互动点播系统对传统喷泉最大的突破之一。</li><li>脚本必须关联媒体数据和节目数据。</li><li>脚本编写需要媒体的相关素材和参数：歌曲、歌谱、歌词、拍号、拍速、开始小节号、结束小节号。</li><li>分段。先分大块：前奏、主歌、副歌、间奏、尾声。再分小段：一般 8 ~ 12 秒左右，大约 2 句歌词，适合喷泉设备的表演。</li><li>逐段编写脚本。根据歌曲的长短，一般可分为几十个小段。</li><li>脚本一般逐段调试，也可多段一起调试。调试时，音乐始终与分段同步。</li><li>脚本完成后，一键提交上云。然后，游客就可以在节目列表中看到并点播。</li><li>当节目在现场播放时，现场服务器会实时从云端获取节目和脚本，然后转换为数据播放。由于脚本的尺寸极小，下载的时间几乎可以忽略不计。</li><li>这样的好处就是，脚本可以随时被修改优化。渐进提高质量，应对客户不断提高的服务要求。</li></ol>',7),r=[o];function s(_,c,n,d,h,u){return a(),l("div",null,r)}const f=i(t,[["render",s]]);export{p as __pageData,f as default};
